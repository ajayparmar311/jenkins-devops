receivers:
  otlp:
    protocols:
      http:
        endpoint: 0.0.0.0:4318
      grpc:
        endpoint: 0.0.0.0:4317
  hostmetrics:
    collection_interval: 60s
    root_path: /hostfs
    scrapers:
      cpu: {}
      memory: {}
      disk: {}
      filesystem: {}
      load: {}
      network: {}
      # Add other scrapers as needed
  prometheus:
    config:
      scrape_configs:
        - job_name: 'python-app'
          scrape_interval: 15s
          metrics_path: '/metrics'
          static_configs:
            - targets: ['python-app:5000']  # Update with your host


processors:
  batch: {}
    #timeout: 10s
    #send_batch_size: 1000
  resourcedetection:
    detectors: [env, system] # Adds host metadata
  # Add required resource attributes for GMP
  resource:
    attributes:
      - key: service.name
        value: "hostmetrics-vm" # Unique identifier for your VM
        action: insert
      - key: gcp.resource_type
        value: "prometheus_target" # Required for GMP ingestion
        action: insert
  memory_limiter:
    check_interval: 1s
    limit_percentage: 65
    spike_limit_percentage: 20
  

exporters:
  loki:
    endpoint: "http://prometheus-grafana-loki-1:3100/loki/api/v1/push"  # Replace with your Loki URL
    default_labels_enabled:
      exporter: false
      job: true
      instance: true
      level: true
    retry_on_failure:
      enabled: true
    sending_queue:
      enabled: true
      storage: file_storage

  prometheusremotewrite:
    endpoint: "https://prometheus.googleapis.com/v1/projects/my-kube-project-429018/locations/global/prometheus/api/v1/write"
    auth:
      authenticator: googleclientauth
  googlecloud:
    project: my-kube-project-429018
    user_agent: "otel-collector"
    metric:
      prefix: "custom.googleapis.com/hostmetrics"
    #log:
    #  default_log_name: opentelemetry.io/collector-exported-log
    #sending_queue:
    #  enabled: true
    #  storage: file_storage
    #retry_on_failure: true
    #retry_on_failure:
    #  enabled: true
    #  initial_interval: 5s
    #  max_interval: 30s
    #  max_elapsed_time: 300s
  debug:
    verbosity: detailed

service:
  #extensions: [file_storage]
  pipelines:
    metrics:
      receivers: [prometheus]
      processors: [resourcedetection, resource, batch]
      exporters: [googlecloud,debug]
    #logs:
    #  receivers: [otlp]
    #  processors: [memory_limiter,batch]
    #  exporters: [loki]

extensions:
  googleclientauth:
    audience: https://monitoring.googleapis.com/
  file_storage:
    directory: ./otel_storage
    create_directory: true
