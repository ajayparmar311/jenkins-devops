services:
  #alertmanager:
  #  image: prom/alertmanager
  #  container_name: alertmanager
  #  ports:
  #    - "9093:9093"
  #  networks:
  #    - monitoring
  #  volumes:
  #    - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
  #blackbox_exporter:
  #  image: quay.io/prometheus/blackbox-exporter:latest
  #  container_name: blackbox_exporter
  #  ports:
  #    - "9115:9115"
  #  volumes:
  #    - ./blackbox_exporter/blackbox.yml:/config/blackbox.yml
  #  command:
  #    - '--config.file=/config/blackbox.yml'
  #  restart: unless-stopped
  #mysql:
  #  image: mysql-with-tools:8.0
  #  container_name: mysql-server
  #  restart: unless-stopped
  #  ports:
  #    - "3306:3306"
  #  environment:
  #    MYSQL_ROOT_PASSWORD: test1234
  #    MYSQL_DATABASE: mydb
  #  volumes:
  #    - mysql_data:/var/lib/mysql
  #  networks:
  #    - monitoring
  #mysqld_exporter:
  #  image: prom/mysqld-exporter
  #  container_name: mysqld_exporter
  #  restart: unless-stopped
  #  ports:
  #    - "9104:9104"
  #  environment:
  #    - DATA_SOURCE_NAME=exporter:password@(mysql-server:3306)/
  #  networks:
  #    - monitoring
  #  volumes:
  #    - ./mysql_exporter/config.my-cnf:/.my.cnf
  #  command: ["--config.my-cnf=/.my.cnf"]
  #promtail:
  #  image: grafana/promtail:latest
  #  volumes:
  #    - /var/log:/var/log
  #  command: -config.file=/etc/promtail/config.yml
  #  networks:
  #    - monitoring
  #app:
  #  build: ./grafana-alloy/otel-demo/app
  #  container_name: otel-python-app
  #  depends_on:
  #    - alloy
  #  ports:
  #    - '8000:8000'
  #  networks:
  #    - monitoring
  #alloy:
  #  image: grafana/alloy:latest
  #  container_name: grafana-alloy
  #  volumes:
  #    - ./grafana-alloy/otel-demo/config.alloy:/etc/alloy/config.alloy
  #    - ./prometheus/alloy-prometheus.yml:/tmp/alloy-prometheus.yml
  #  ports:
  #    - '4318:4318' # OTLP receiver
  #    - '12345:12345' # (Optional) Alloy HTTP UI
  #  command:
  #    - run
  #    - --server.http.listen-addr=0.0.0.0:12345
  #    - --storage.path=/var/lib/alloy/data
  #    - /etc/alloy/config.alloy
  #  restart: unless-stopped
  #  networks:
  #    - monitoring
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    volumes:
      - ./otel/python-app-otlp/collector/otel-collector-config.yaml:/etc/otel-collector-config.yaml
      - ./otel/python-app-otlp/logs:/logs  # Mount logs to Collector
      - /:/hostfs:ro         # Read-only access to host filesystem
      - /proc:/hostfs/proc:ro
      - /sys:/hostfs/sys:ro
      - /etc:/hostfs/etc:ro
      - ./otel/python-app-otlp/app/my-kube-project-429018-47e6566c031a.json:/etc/otelcol-contrib/key.json
    environment:
      GOOGLE_APPLICATION_CREDENTIALS: /etc/otelcol-contrib/key.json
    #network_mode: "host"      # So it can access host network interfaces
    privileged: true          # Required for some Linux host metrics
    command: --config=/etc/otel-collector-config.yaml
    ports:
      - "4318:4318"  # OTLP HTTP (optional)
      - "8888:8888"  # metrics
      - "4317:4317"
      - "55681:55681"
      - "13133:13133" # health check
    restart: unless-stopped
    networks:
      - monitoring  

volumes:
  prom_data:
  mysql_data:
networks:
  monitoring:
